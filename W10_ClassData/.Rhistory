install.packages("vcd")
library(vcd)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"),藍＝45,綠＝55,紅＝17)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), 藍＝45, 綠＝55, 紅＝17)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), 藍＝45, 綠＝55, 紅＝17)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), "藍"＝45, "綠"＝55, "紅"＝17)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), 藍＝45 , 綠＝55 , 紅＝17)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), 藍=45 , 綠=55 , 紅=17)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = false)
Q1
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = false)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FLASE)
########################
#Q1
Q1 <- data.frame(row.name=c("Frequency"), 藍=45 , 綠=55 , 紅=17)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FLASE)
Q1_num <- as.numeric(Q1)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FLASE)
########################
#Q1
Q1 <- data.frame(row.names=c("Frequency"), 藍=45 , 綠=55 , 紅=17)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FLASE)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FALSE)
########################
#Q1
Q1 <- data.frame(row.names=c("Frequency"), 藍=45 , 綠=55 , 紅=17)
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FALSE)
########################
#Q1
Q1 <- data.frame(row.names=c("Frequency"), 藍=45 , 綠=55 , 紅=17)
Q1
chisq.test(Q1,p=c(1/2,3/8,1/8),simulate.p.value = FALSE)
#Q2
Q2 <-data.frame(row.names = c("痊癒","未痊癒"),A=c(5,7),b=c(2,6))
Q2
chisq.test(Q2)
independence_table(data.matrix(Q2))
fisher.test(Q2)
Ex1 <- data.frame (PM25=c(data1$PM25)),NO2=c(data1$NO2),Temperature=c(data1$Temperature),RH=c(data1$RH))
Ex1 <- data.frame (PM25=c(data1$PM25),NO2=c(data1$NO2),Temperature=c(data1$Temperature),RH=c(data1$RH))
setwd("/Users/huangweiting/coding/INTRODUCTION TO SCIENTIFIC COMPUTING SOFTWARE /W10_ClassData")
getwd()
data1<-read.csv("HW_Database.csv")
Ex1 <- data.frame (PM25=c(data1$PM25),NO2=c(data1$NO2),Temperature=c(data1$Temperature),RH=c(data1$RH))
View(data1)
View(data1)
View(Ex1)
View(Ex1)
data1<-read.csv("HW_Database.csv")
Ex1 <- data.frame (PM25=c(data1$PM25),NO2=c(data1$NO2),Temperature=c(data1$Temperature),RH=c(data1$RH))
rcorr(as.matrix(Ex1),type=c("pearson"))
install package("Hmisc")
install.package("Hmisc")
install.packages("Hmisc")
library(Hmisc)
library("Hmisc")
Ex1 <- data.frame (PM25=c(data1$PM25),NO2=c(data1$NO2),Temperature=c(data1$Temperature),RH=c(data1$RH))
rcorr(as.matrix(Ex1),type=c("pearson"))
Ex1_lm<-(No2 ~PM25+Temperature+RH,data=Ex1)
Ex1_lm<-(No2 ~PM25+Temperature+RH ,data=Ex1)
Ex1_lm<-lm(No2 ~ PM25+Temperature+RH, data=Ex1)
Ex1_lm<-lm(NO2 ~ PM25+Temperature+RH, data=Ex1)
summary(Ex1_lm)
anova_alt(Ex1_lm)
#def function
anova_alt = function (object, reg_collapse=TRUE,...)
{
if (length(list(object, ...)) > 1L)
return(anova.lmlist(object, ...))
if (!inherits(object, "lm"))
warning("calling anova.lm(<fake-lm-object>) ...")
w <- object$weights
ssr <- sum(if (is.null(w)) object$residuals^2 else w * object$residuals^2)
mss <- sum(if (is.null(w)) object$fitted.values^2 else w *
object$fitted.values^2)
if (ssr < 1e-10 * mss)
warning("ANOVA F-tests on an essentially perfect fit are unreliable")
dfr <- df.residual(object)
p <- object$rank
if (p > 0L) {
p1 <- 1L:p
comp <- object$effects[p1]
asgn <- object$assign[stats:::qr.lm(object)$pivot][p1]
nmeffects <- c("(Intercept)", attr(object$terms, "term.labels"))
tlabels <- nmeffects[1 + unique(asgn)]
ss <- c(vapply(split(comp^2, asgn), sum, 1), ssr)
df <- c(lengths(split(asgn, asgn)), dfr)
if(reg_collapse){
if(attr(object$terms, "intercept")){
collapse_p<-2:(length(ss)-1)
ss<-c(ss[1],sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
tlabels<-c(tlabels[1],"Source")
} else{
collapse_p<-1:(length(ss)-1)
ss<-c(sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
tlabels<-c("Regression")
}
}
}else {
ss <- ssr
df <- dfr
tlabels <- character()
if(reg_collapse){
collapse_p<-1:(length(ss)-1)
ss<-c(sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
}
}
ms <- ss/df
f <- ms/(ssr/dfr)
P <- pf(f, df, dfr, lower.tail = FALSE)
table <- data.frame(df, ss, ms, f, P)
table <- rbind(table,
colSums(table))
if (attr(object$terms, "intercept")){
table$ss[nrow(table)]<- table$ss[nrow(table)] - table$ss[1]
}
table$ms[nrow(table)]<-table$ss[nrow(table)]/table$df[nrow(table)]
table[length(P):(length(P)+1), 4:5] <- NA
dimnames(table) <- list(c(tlabels, "Error","Total"),
c("Df","SS", "MS", "F",
"P"))
if (attr(object$terms, "intercept")){
table <- table[-1, ]
table$MS[nrow(table)]<-table$MS[nrow(table)]*(table$Df[nrow(table)])/(table$Df[nrow(table)]-1)
table$Df[nrow(table)]<-table$Df[nrow(table)]-1
}
structure(table, heading = c("Analysis of Variance Table\n"),
class = c("anova", "data.frame"))
}
anova_alt(Ex1_lm)
anova(lm(NO2~Temperature,data=data1))
anova(lm(NO2~PM25,data=data1))
anova(lm(NO2~RH,data=data1))
#####################
# Anova for full model fitting #
#####################
# Definition function
anova_alt = function (object, reg_collapse=TRUE,...)
{
if (length(list(object, ...)) > 1L)
return(anova.lmlist(object, ...))
if (!inherits(object, "lm"))
warning("calling anova.lm(<fake-lm-object>) ...")
w <- object$weights
ssr <- sum(if (is.null(w)) object$residuals^2 else w * object$residuals^2)
mss <- sum(if (is.null(w)) object$fitted.values^2 else w *
object$fitted.values^2)
if (ssr < 1e-10 * mss)
warning("ANOVA F-tests on an essentially perfect fit are unreliable")
dfr <- df.residual(object)
p <- object$rank
if (p > 0L) {
p1 <- 1L:p
comp <- object$effects[p1]
asgn <- object$assign[stats:::qr.lm(object)$pivot][p1]
nmeffects <- c("(Intercept)", attr(object$terms, "term.labels"))
tlabels <- nmeffects[1 + unique(asgn)]
ss <- c(vapply(split(comp^2, asgn), sum, 1), ssr)
df <- c(lengths(split(asgn, asgn)), dfr)
if(reg_collapse){
if(attr(object$terms, "intercept")){
collapse_p<-2:(length(ss)-1)
ss<-c(ss[1],sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
tlabels<-c(tlabels[1],"Source")
} else{
collapse_p<-1:(length(ss)-1)
ss<-c(sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
tlabels<-c("Regression")
}
}
}else {
ss <- ssr
df <- dfr
tlabels <- character()
if(reg_collapse){
collapse_p<-1:(length(ss)-1)
ss<-c(sum(ss[collapse_p]),ss[length(ss)])
df<-c(df[1],sum(df[collapse_p]),df[length(df)])
}
}
ms <- ss/df
f <- ms/(ssr/dfr)
P <- pf(f, df, dfr, lower.tail = FALSE)
table <- data.frame(df, ss, ms, f, P)
table <- rbind(table,
colSums(table))
if (attr(object$terms, "intercept")){
table$ss[nrow(table)]<- table$ss[nrow(table)] - table$ss[1]
}
table$ms[nrow(table)]<-table$ss[nrow(table)]/table$df[nrow(table)]
table[length(P):(length(P)+1), 4:5] <- NA
dimnames(table) <- list(c(tlabels, "Error","Total"),
c("Df","SS", "MS", "F",
"P"))
if (attr(object$terms, "intercept")){
table <- table[-1, ]
table$MS[nrow(table)]<-table$MS[nrow(table)]*(table$Df[nrow(table)])/(table$Df[nrow(table)]-1)
table$Df[nrow(table)]<-table$Df[nrow(table)]-1
}
structure(table, heading = c("Analysis of Variance Table\n"),
class = c("anova", "data.frame"))
}
anova_alt(Ex1_lm)
